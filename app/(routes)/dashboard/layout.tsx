import type { Metadata } from "next";
import { getKindeServerSession } from "@kinde-oss/kinde-auth-nextjs/server";
import StoreUser from "./_components/StoreUser";
import { UserProvider } from "@/app/contexts/UserProvider"
import { api } from "@/convex/_generated/api";
import { ConvexHttpClient } from "convex/browser";
import SideNav from "./_components/Navigation/SideNav/SideNav";
import TopNav from "./_components/Navigation/topNav/TopNav";
import clsx from "clsx";

const convex = new ConvexHttpClient(process.env.NEXT_PUBLIC_CONVEX_URL!);

export const metadata: Metadata = {
  title: "Dashboard",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
    const {getUser}: any = getKindeServerSession();
    const kindeUser = await getUser();
    
    let initialUser = null;
    if (kindeUser) {
      const userOrg = await convex.query(api.users.getUserOrganization, { kindeId: kindeUser.id });
      initialUser = {
        id: kindeUser.id,
        email: kindeUser.email as string,
        given_name: kindeUser.given_name,
        family_name: kindeUser.family_name,
        organizationId: userOrg ?? undefined,
      };
    }

  return (
    <html lang="en">
      <UserProvider initialUser={initialUser}>
        <body className="bg-[#FBFBFC] dark:bg-[#1E2024] dark:text-[#CCCCCC]">
          {kindeUser && <StoreUser user={kindeUser} />}
          <div className="h-screen flex flex-col">
            <TopNav />
            <div className="flex flex-1 overflow-hidden pt-12">
              <SideNav />
              <main className={clsx(
                "flex-1 overflow-y-auto mr-2 mb-2 rounded-md",
                "border bg-white",
                "dark:bg-[#2A2E35] dark:border-[#656f7d6d]",
              )}>
                  <div>
                    {children}
                  </div>
              </main>
            </div>
          </div>
        </body>
      </UserProvider>
    </html>
  );
}
